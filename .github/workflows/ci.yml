name: CI
on:
    push:
        branches:
            - main
    pull_request:
permissions:
    contents: read
    packages: write
jobs:
    ci:
        name: CI
        runs-on: ubuntu-22.04
        outputs:
            targets: ${{ steps.affected-apps.outputs.targets }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v5

            - name: Setup Tools
              uses: ./.github/actions/setup-tools

            - name: Compile code
              run: npx nx affected -t build

            - name: Check linting
              run: npx nx affected -t lint

            - name: Check formatting
              run: npx nx format:check

            - name: Determine affected apps
              id: affected-apps
              run: |
                  AFFECTED_APPS=$(npx nx show projects --affected --type app)

                  echo "AFFECTED_APPS: $AFFECTED_APPS"

                  NUM_AFFECTED_APPS=$(echo "$AFFECTED_APPS" | grep -c . || echo 0)

                  echo "NUM_AFFECTED_APPS: $NUM_AFFECTED_APPS"

                  if [ "$NUM_AFFECTED_APPS" -eq "3" ]; then
                    TARGETS="all"
                  elif [ "$NUM_AFFECTED_APPS" -eq "0" ]; then
                    TARGETS="all"
                  else
                    TARGETS=$(echo "$AFFECTED_APPS" | tr '\n' ' ')
                    TARGETS=$(echo "$AFFECTED_APPS" | xargs)
                  fi

                  echo "TARGETS: $TARGETS"

                  echo "targets=$TARGETS" >> "$GITHUB_OUTPUT"
    build-docker-images:
        name: Build & push Docker images
        needs: ci
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: ./.github/workflows/docker-build.yml
        with:
            targets: ${{ needs.ci.outputs.targets }}
